name: build-windows-exe

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Optional version (e.g. 2025.09.16)"
        required: false
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: windows-latest
    env:
      APP_NAME: BVBChecker
      # prefer tag name, then manual input, else short SHA
      APP_VERSION: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || inputs.version || github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_txt.txt
          pip install pyinstaller

      - name: Stamp version into package
        run: |
          echo __version__ = "${{ env.APP_VERSION }}" > version.py

      # Build using your spec file already in the repo
      - name: Build with PyInstaller spec
        run: |
          pyinstaller pyinstaller_spec.py --clean

      # Rename the exe to include version and app name
      - name: Prepare artifact
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist_out | Out-Null
          $exe = Get-ChildItem -Path dist -Filter *.exe | Select-Object -First 1
          if (-not $exe) { throw "No .exe found in dist/" }
          $dest = "dist_out/${{ env.APP_NAME }}-${{ env.APP_VERSION }}.exe"
          Copy-Item $exe.FullName $dest
          Get-ChildItem dist_out

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-${{ env.APP_VERSION }}-windows
          path: dist_out/

      # Optional: publish a GitHub Release when building from a tag
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist_out/${{ env.APP_NAME }}-${{ env.APP_VERSION }}.exe
          generate_release_notes: true
